---
- hosts: stage
  tasks:
    - name: Create a temp directory to store files needed by the run
      tempfile:
        state: directory
        prefix: "ansible-deploy-{{ cluster_name }}"
      register: _run_temp_dir
      notify:
        - delete temp items

    - name: Provision domains
      include_role:
        name: "ten7.digitalocean_domain"
      loop: "{{ digitalocean_domains | default([]) }}"
      loop_control:
        label: "{{ digitalocean_domain.name | default('undefined') }}"
        loop_var: digitalocean_domain

    - name: Get the kubeconfig file.
      import_role:
        name: ten7.digitalocean_kubeconfig
      vars:
        digitalocean_kubeconfig:
          cluster: "{{ cluster_name }}"
          kubeconfig: "{{ _run_temp_dir.path }}/kubectl.yaml"

    - name: Generate an .htpasswd
      htpasswd:
        path: "{{ _run_temp_dir.path }}/.htpasswd"
        state: present
        name: "{{ item.user }}"
        password: "{{ item.pass }}"
      loop:
        - user: "ten7release"
          pass: "ten7release"

    - name: Deploy the cluster definitions
      include_role:
        name: "ten7.flightdeck_cluster"
      vars:
        flightdeck_cluster_kubeconfig: "{{ _run_temp_dir.path }}/kubectl.yaml"

    - name: Wait for the deployment to complete.
      shell: >
        kubectl
        --kubeconfig="{{ _run_temp_dir.path }}/kubectl.yaml"
        --namespace="{{ flightdeck_cluster.namespace }}"
        rollout status
        --watch=true
        --timeout=3m
        deployment/web
      register: _deploy_status

  handlers:
    - name: delete temp items
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ _run_temp_dir.path }}"
